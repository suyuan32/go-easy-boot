syntax = "v1"

info(
    title: "menu management"
    desc: "menu management APIs"
    author: "ryansu"
    email: "yuansu.china.work@gmail.com"
    version: "v1.0"
)

import "base.api"

type (
    AuthorityMenu {
        BaseMenu
        MenuId      string                 `json:"menuId"`
        AuthorityId uint                   `json:"-"`
        Children    []AuthorityMenu        `json:"children"`
        Param       []MenuParam            `json:"param"`
        Btns        map[string]uint        `json:"btns"`
    }

    BaseMenu {
        BaseInfo
        MenuLevel    uint        `json:"-"`
        ParentId     string      `json:"parentId"`        // parent menu id
        Path         string      `json:"path"`            // router path
        Name         string      `json:"name"`            // router name
        Hidden       bool        `json:"hidden"`          // hide menu
        Component    string      `json:"component"`       // the path of vue file
        Sort         int         `json:"sort"`            // sorting numbers
        MetaData     Meta        `json:"metaData"`        // extra parameters
        AuthorityIds []Authority `json:"authorityIds"`
        Children     []BaseMenu  `json:"children"`
        Param        []MenuParam `json:"parameters"`
    }

    Meta {
        KeepAlive bool   `json:"keepAlive"` // save in cache
        Title     string `json:"title"`    // menu name
        Icon      string `json:"icon"`      // menu icon
        CloseTab  bool   `json:"closeTab"`  // auto close tab
    }

    MenuParam {
        BaseInfo
        MenuId uint   `json:"menuId"`
        Type   string `json:"type"`  // pass parameters via params or query
        Key    string `json:"key"`   // the key of parameters
        Value  string `json:"value"` // the value of parameters
    }

    Authority {
        BaseInfo
        AuthorityId   uint32          `json:"authorityId"`
        AuthorityName string          `json:"authorityName"`
        ParentId      uint32          `json:"parentId"`
        AuthorityIds  []*Authority    `json:"AuthorityIds"`
        Children      []Authority     `json:"children"`
        Menu          []AuthorityMenu `json:"menus" gorm:"many2many:authority_menus;"`
        DefaultRouter string          `json:"defaultRouter" gorm:"comment:default menu;default:dashboard"` // default menu : dashboard
    }

    AuthorityMenuResp {
        BaseMsg
        Data AuthorityMenu `json:"data"`
    }

    MenuListResp {
        PageList
        Data []AuthorityMenu `json:"data"`
    }

    BaseMenuListResp {
        PageList
        Data []BaseMenu `json:"data"`
    }

    BaseMenuResp {
        BaseInfo
        Data BaseMenu `json:"data"`
    }

)

@server(
    jwt: Auth
    group: menu
)

service system {
    @handler createBaseMenuHandler
    post /menu/base (BaseMenu) returns (BaseMsg)

    @handler addAuthorityMenuHandler
    post /menu/authority (AuthorityMenu) returns (BaseMsg)

    @handler deleteBaseMenuHandler
    delete /menu/base/:id (IdReq) returns (BaseMsg)

    @handler updateBaseMenuHandler
    put /menu/base/:id (BaseMenu) returns (BaseMsg)

    @handler getMenuHandler
    get /menu returns (MenuListResp)

    @handler getMenuListHandler
    post /menu/list returns (MenuListResp)

    @handler getBaseMenuHandler
    get /menu/base/:ID (IdReq) returns (BaseMenuResp)

    @handler  getBaseMenuTreeHandler
    get /menu/base/tree returns (BaseMenuListResp)

    @handler getAuthorityMenuHandler
    get /menu/authority/:ID (IdReq) returns (AuthorityMenuResp)

}
