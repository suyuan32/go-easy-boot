syntax = "v1"

info(
    title: "user management"
    desc: "user management api"
    author: "ryansu"
    email: "yuansu.china.work@gmail.com"
    version: "v1.0"
)

import "base.api"

type (
    LoginReq {
        Username   string `form:"username"`
        Password   string `form:"password"`
        CaptchaId  string `form:"captchaId"`
        Captcha    string `form:"captcha"`
    }

    LoginResp {
        BaseMsg
        Data LoginRespData `json:"data"`
    }
    
    LoginRespData {
        UserId       uint64    `json:"userId"`
        Role         RoleInfo  `json:"role"`
        Token        string    `json:"token"`
        Expire       uint64     `json:"expire"`
    }

    RoleInfo {
        RoleName   string `json:"roleName"`
        Value      uint32 `json:"value"`
    }

    RegisterReq {
        Username  string `form:"username"`
        Password  string `form:"password"`
        CaptchaId string `form:"captchaId"`
        Captcha   string `form:"captcha"`
        Email     string `form:"email"`
    }

    RegisterRespData {
        Status string `json:"status"` 
    }

    ChangePasswordReq {
        Username string    `form:"username"`
        Password string    `form:"password"`
        NewPassword string `form:"newPassword"`
    }

    ChangePasswordResp {
        BaseMsg
    }

    ModifyInfoReq {
        UserId       int64        `form:"userId"`
        Nickname     string       `form:"nickname"`
        Mobile       string       `form:"mobile"`
        RoleId       string       `form:"roleId"`
        Email        string       `form:"email"`
        Avatar       string       `form:"avatar"`
        SideMode     string       `form:"sideMode"`
        Status       int32        `form:"status"`
    }

    UserInfoResp {
        UserId       int64        `json:"userId"`
        UUID         int64        `json:"uuid"`
        Username     int64        `json:"username"`
        Nickname     string       `json:"nickname"`
        Mobile       string       `json:"mobile"`
        RoleId       string       `json:"roleId"`
        Email        string       `json:"email"`
        Avatar       string       `json:"avatar"`
        SideMode     string       `json:"sideMode"`
        Status       int32        `json:"status"`
        CreateAt     uint64       `json:"createAt"`
        UpdateAt     uint64       `json:"updateAt"`
        DeleteAt     uint64       `json:"deleteAt"`
    }

    UserInfoListResp {
        PageList
        Data    []UserInfoResp  `json:"data"`
    }
)

@server(
    group: user
    middleware: Cros
)

service system {
    @handler loginHandler
    post /user/login (LoginReq) returns (LoginResp)

    @handler registerHandler
    post /user/register (RegisterReq) returns (BaseResp)
}

@server(
    group : user
    jwt : Auth
    middleware: Cros
)

service system {
    @handler changePasswordHandler
    post /user/change-password (ChangePasswordReq) returns (ChangePasswordResp)

    @handler getUserInfoHandler
    get /user/info (IdReq) returns (UserInfoResp)

    @handler getUserInfoListHandler
    post /user/list (PageInfo) returns (UserInfoListResp)

    @handler modifyInfoHandler
    post /user/modify  (ModifyInfoReq) returns (UserInfoResp)

    @handler deleteUserInfoHandler
    delete /user/:id (IdReq) returns (BaseMsg)
}
