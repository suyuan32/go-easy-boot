syntax = "v1"

info(
    title: "menu management"
    desc: "menu management APIs"
    author: "ryansu"
    email: "yuansu.china.work@gmail.com"
    version: "v1.0"
)

import "base.api"

type (
    RoleMenu {
        Menu
        MenuId      string                 `json:"menuId"`
        RoleId uint                   `json:"-"`
        Children    []RoleMenu        `json:"children"`
        Param       []MenuParam            `json:"param"`
        Btns        map[string]uint        `json:"btns"`
    }

    Menu {
        BaseInfo
        MenuLevel    uint        `json:"-"`
        ParentId     string      `json:"parentId"`        // parent menu id
        Path         string      `json:"path"`            // index path
        Name         string      `json:"name"`            // index name
        Hidden       bool        `json:"hidden"`          // hide menu
        Component    string      `json:"component"`       // the path of vue file
        Sort         int         `json:"sort"`            // sorting numbers
        MetaData     Meta        `json:"metaData"`        // extra parameters
        Roles  []Role `json:"roles"`
        Children     []Menu      `json:"children"`
        Param        []MenuParam `json:"parameters"`
    }

    Meta {
        KeepAlive bool   `json:"keepAlive"` // save in cache
        Title     string `json:"title"`    // menu name
        Icon      string `json:"icon"`      // menu icon
        CloseTab  bool   `json:"closeTab"`  // auto close tab
    }

    MenuParam {
        BaseInfo
        MenuId uint   `json:"menuId"`
        Type   string `json:"type"`  // pass parameters via params or query
        Key    string `json:"key"`   // the key of parameters
        Value  string `json:"value"` // the value of parameters
    }

    Role {
        BaseInfo
        RoleId   uint32          `json:"roleId"`
        RoleName string          `json:"roleName"`
        ParentId      uint32          `json:"parentId"`
        RoleIds  []*Role    `json:"RoleIds"`
        Children      []Role     `json:"children"`
        Menu          []RoleMenu `json:"menus" gorm:"many2many:role_menus;"`
        DefaultRouter string          `json:"defaultRouter" gorm:"comment:default menu;default:dashboard"` // default menu : dashboard
    }

    RoleMenuResp {
        BaseMsg
        Data RoleMenu `json:"data"`
    }

    RoleMenuListResp {
        PageList
        Data []RoleMenu `json:"data"`
    }

    MenuListResp {
        PageList
        Data []Menu `json:"data"`
    }

    MenuResp {
        BaseInfo
        Data Menu `json:"data"`
    }

)

@server(
    jwt: Auth
    group: menu
    middleware: Cros, Role
)

service system {
    @handler createMenuHandler
    post /menu (Menu) returns (BaseMsg)

    @handler addRoleMenuHandler
    post /menu/role (RoleMenu) returns (BaseMsg)

    @handler deleteMenuHandler
    delete /menu/:id (IdReq) returns (BaseMsg)

    @handler updateMenuHandler
    put /menu/:id (Menu) returns (BaseMsg)

    @handler getMenuHandler
    get /menu returns (MenuResp)

    @handler getMenuListHandler
    post /menu/list returns (MenuListResp)

    @handler  getMenuTreeHandler
    get /menu/tree returns (MenuListResp)

    @handler getRoleMenuHandler
    get /menu/role/:ID (IdReq) returns (RoleMenuResp)

}
