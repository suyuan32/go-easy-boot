// @ts-nocheck
// This file is generated by Umi automatically
// DO NOT CHANGE IT MANUALLY!
import * as Plugin_0 from '/home/ryan/GolandProjects/test/go-easy-boot-web/src/app.tsx';
import * as Plugin_1 from '/home/ryan/GolandProjects/test/go-easy-boot-web/src/.umi/plugin-access/runtime.tsx';
import * as Plugin_2 from '/home/ryan/GolandProjects/test/go-easy-boot-web/src/.umi/plugin-initialState/runtime.tsx';
import * as Plugin_3 from '/home/ryan/GolandProjects/test/go-easy-boot-web/src/.umi/plugin-layout/runtime.tsx';
import * as Plugin_4 from '/home/ryan/GolandProjects/test/go-easy-boot-web/src/.umi/plugin-model/runtime.tsx';
import * as Plugin_5 from '/home/ryan/GolandProjects/test/go-easy-boot-web/src/.umi/plugin-locale/runtime.tsx';
import {PluginManager} from 'umi';

export function getPlugins() {
    return [
        {
            apply: Plugin_0,
            path: process.env.NODE_ENV === 'production' ? void 0 : '/home/ryan/GolandProjects/test/go-easy-boot-web/src/app.tsx',
        },
        {
            apply: Plugin_1,
            path: process.env.NODE_ENV === 'production' ? void 0 : '/home/ryan/GolandProjects/test/go-easy-boot-web/src/.umi/plugin-access/runtime.tsx',
        },
        {
            apply: Plugin_2,
            path: process.env.NODE_ENV === 'production' ? void 0 : '/home/ryan/GolandProjects/test/go-easy-boot-web/src/.umi/plugin-initialState/runtime.tsx',
        },
        {
            apply: Plugin_3,
            path: process.env.NODE_ENV === 'production' ? void 0 : '/home/ryan/GolandProjects/test/go-easy-boot-web/src/.umi/plugin-layout/runtime.tsx',
        },
        {
            apply: Plugin_4,
            path: process.env.NODE_ENV === 'production' ? void 0 : '/home/ryan/GolandProjects/test/go-easy-boot-web/src/.umi/plugin-model/runtime.tsx',
        },
        {
            apply: Plugin_5,
            path: process.env.NODE_ENV === 'production' ? void 0 : '/home/ryan/GolandProjects/test/go-easy-boot-web/src/.umi/plugin-locale/runtime.tsx',
        },
    ];
}

export function getValidKeys() {
    return ['patchRoutes', 'patchClientRoutes', 'modifyContextOpts', 'rootContainer', 'innerProvider', 'i18nProvider', 'accessProvider', 'dataflowProvider', 'outerProvider', 'render', 'onRouteChange', 'getInitialState', 'layout', 'request', 'locale', 'qiankun',];
}

let pluginManager = null;

export function createPluginManager() {
    pluginManager = PluginManager.create({
        plugins: getPlugins(),
        validKeys: getValidKeys(),
    });
    return pluginManager;
}

export function getPluginManager() {
    return pluginManager;
}
